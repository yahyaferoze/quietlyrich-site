{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///Users/yahyaferoze/Downloads/sandbox/app/api/generate-script/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport OpenAI from \"openai\";\n\n// Initialize OpenAI with your API key\nconst openai = new OpenAI({\n  apiKey: process.env.OPENAI_API_KEY,\n});\n\nexport async function POST(request: Request) {\n  try {\n    const { funnelStyle, stepTitle, stepDesc } = await request.json();\n\n    if (!funnelStyle || !stepTitle || !stepDesc) {\n      return NextResponse.json({ error: \"Missing parameters\" }, { status: 400 });\n    }\n\n    const prompt = `\nCreate a TikTok-style video script using the \"${funnelStyle}\" funnel.\nStep title: ${stepTitle}\nStep description: ${stepDesc}\nMake it short, engaging, and punchy like a viral video.\n`;\n\n    const response = await openai.chat.completions.create({\n      model: \"gpt-4o\", // or \"gpt-3.5-turbo\"\n      messages: [\n        {\n          role: \"system\",\n          content: \"You are a viral content creator helping users write TikTok scripts.\",\n        },\n        {\n          role: \"user\",\n          content: prompt,\n        },\n      ],\n      max_tokens: 300,\n    });\n\n    const result = response.choices[0]?.message?.content ?? \"No script generated.\";\n    return NextResponse.json({ script: result });\n  } catch (error) {\n    console.error(\"OpenAI Error:\", error);\n    return NextResponse.json(\n      { error: \"Failed to generate script. Please try again later.\" },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,sCAAsC;AACtC,MAAM,SAAS,IAAI,kJAAA,CAAA,UAAM,CAAC;IACxB,QAAQ,QAAQ,GAAG,CAAC,cAAc;AACpC;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,MAAM,QAAQ,IAAI;QAE/D,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,UAAU;YAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAqB,GAAG;gBAAE,QAAQ;YAAI;QAC1E;QAEA,MAAM,SAAS,CAAC;8CAC0B,EAAE,YAAY;YAChD,EAAE,UAAU;kBACN,EAAE,SAAS;;AAE7B,CAAC;QAEG,MAAM,WAAW,MAAM,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACpD,OAAO;YACP,UAAU;gBACR;oBACE,MAAM;oBACN,SAAS;gBACX;gBACA;oBACE,MAAM;oBACN,SAAS;gBACX;aACD;YACD,YAAY;QACd;QAEA,MAAM,SAAS,SAAS,OAAO,CAAC,EAAE,EAAE,SAAS,WAAW;QACxD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,QAAQ;QAAO;IAC5C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAqD,GAC9D;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}